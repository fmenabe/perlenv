#!/usr/bin/env perl
use strict;
use warnings;
use Cwd qw(abs_path);
use File::Path qw(mkpath);
use File::Basename qw(basename);
use Getopt::Long;

my $prompt = '';
GetOptions('prompt=s' => \$prompt);

if ( !$ARGV[0] ) {
    print "Usage: penv.pl <dir> [-prompt PROMPT]\n";
    exit;
}

if ($prompt eq '') {
    $prompt = basename($ARGV[0])
}

my $abs = abs_path( $ARGV[0] );

mkpath "$abs/bin";

open my $file, '>', "$abs/bin/activate";
while (<DATA>) {
    $_ =~ s/{{ PENV }}/$abs/g;
    $_ =~ s/{{ PROMPT }}/$prompt/g;
    print $file $_;
}
close($file);

__DATA__
# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly

deactivate () {
    # reset old environment variables
    if [ -n "$_OLD_VIRTUAL_PATH" ] ; then
        PATH="$_OLD_VIRTUAL_PATH"
        export PATH
        unset _OLD_VIRTUAL_PATH
    fi

    unset MODULEBUILDRC
    unset PERL_MM_OPT
    unset PERL5LIB

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi

    if [ -n "$_OLD_VIRTUAL_PS1" ] ; then
        PS1="$_OLD_VIRTUAL_PS1"
        export PS1
        unset _OLD_VIRTUAL_PS1
    fi

    unset VIRTUAL_ENV
    if [ ! "$1" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate
    fi
}

# unset irrelavent variables
deactivate nondestructive

VIRTUAL_ENV="{{ PENV }}"
export VIRTUAL_ENV

_OLD_VIRTUAL_PATH="$PATH"
PATH="$VIRTUAL_ENV/bin:$PATH"
export PATH

if [ -z "$VIRTUAL_ENV_DISABLE_PROMPT" ] ; then
    _OLD_VIRTUAL_PS1="$PS1"
    if [ "`basename \"$VIRTUAL_ENV\"`" = "__" ] ; then
        # special case for Aspen magic directories
        # see http://www.zetadev.com/software/aspen/
        PS1="[{{ PROMPT }}] $PS1"
    else
        PS1="({{ PROMPT }})$PS1"
    fi
    export PS1
fi

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r
fi
eval $(perl -I{{ PENV }}/perl5/lib/perl5 -Mlocal::lib={{ PENV }})
